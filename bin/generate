#!/bin/bash

set -euo pipefail
ROOT="$(dirname "$0")"/..

#------------------------------------------------------------------------------
# Functions
#------------------------------------------------------------------------------

function getComponent {
  [ "$1" == "EastWestGateway" ] && { echo IngressGateways; exit; }
  echo "$1"
}

function getConfig {
  [ "$1" == "EastWestGateway" ] && { echo "-f ${ROOT}/config/iop-ewgw.yaml"; exit; }
  echo "-f ./config/iop-igws.yaml"
}

function generate {
  istioctl-"$1" manifest generate \
    --component "$(getComponent "$2")" \
    -f "${ROOT}"/config/iop-base.yaml \
    -f "${ROOT}"/config/iop-cni.yaml \
    -f "${ROOT}"/config/iop-pilot.yaml \
    "$(getConfig "$2")" |
  sed '
    s/cluster-XXXX/{{ .Values.cluster }}/g;
    s/domain-XXXX/{{ .Values.domain }}/g;
    s/network-XXXX/{{ .Values.network }}/g;
    s/mesh-XXXX/{{ .Values.mesh }}/g;
    s/revision-XXXX/{{ .Values.revision }}/g;
    s/trustDomain-XXXX/{{ .Values.trustDomain }}/g;
  '
}

#------------------------------------------------------------------------------
# Generate yaml for the given version and component
#------------------------------------------------------------------------------

VERSION="$(yq '.revision' < "${ROOT}"/values.yaml)"
generate "${VERSION}" Base > charts/base/templates/generated.yaml
generate "${VERSION}" Cni > charts/cni/templates/generated.yaml
generate "${VERSION}" Pilot > charts/pilot/templates/generated.yaml
generate "${VERSION}" IngressGateways > charts/igws/templates/generated.yaml
generate "${VERSION}" EastWestGateway > charts/ewgw/templates/generated.yaml

# Copy the revision-tags.yaml file from the upstream istiod chart
helm pull istio/istiod --version "${VERSION//-/.}" --untar --untardir /tmp/xxx
cp /tmp/xxx/istiod/templates/revision-tags.yaml charts/tags/templates/generated.yaml
cp /tmp/xxx/istiod/templates/zzz_profile.yaml charts/tags/templates/zzz_profile.yaml
cp /tmp/xxx/istiod/values.yaml charts/tags/values.yaml
rm -rf /tmp/xxx

#------------------------------------------------------------------------------
# Set the revision in the values.yaml of the components
#------------------------------------------------------------------------------

yq -i ".revision=\"${VERSION}\"" charts/base/values.yaml
yq -i ".revision=\"${VERSION}\"" charts/cni/values.yaml
yq -i ".revision=\"${VERSION}\"" charts/ewgw/values.yaml
yq -i ".revision=\"${VERSION}\"" charts/igws/values.yaml
yq -i ".revision=\"${VERSION}\"" charts/pilot/values.yaml

#------------------------------------------------------------------------------
# Extract the side-car injector config from the pilot generated yaml
# and save it in a separate file because it contains a template and
# helm gets confused if it is in the same file and it is not escaped.
#------------------------------------------------------------------------------

yq '. |
  select(.kind == "ConfigMap" and .metadata.name == "istio-sidecar-injector-*") |
  .data.config' "charts/pilot/templates/generated.yaml" \
  > "charts/pilot/files/istio-sidecar-injector.raw"
