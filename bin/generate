#!/bin/bash

#------------------------------------------------------------------------------
# Functions
#------------------------------------------------------------------------------

function getComponent {
  [ "$1" == "EastWestGateway" ] && { echo IngressGateways; exit; }
  echo "$1"
}

function getConfig {
  [ "$1" == "EastWestGateway" ] && { echo "-f ./config/iop-ewgw.yaml"; exit; }
  echo "-f ./config/iop-igws.yaml"
}

function generate {
  istioctl-"$1" manifest generate \
    --component "$(getComponent "$2")" \
    -f ./config/iop-base.yaml \
    -f ./config/iop-cni.yaml \
    -f ./config/iop-pilot.yaml \
    "$(getConfig "$2")" |
  sed '
    s/cluster-XXXX/{{ .Values.cluster }}/g;
    s/domain-XXXX/{{ .Values.domain }}/g;
    s/network-XXXX/{{ .Values.network }}/g;
    s/mesh-XXXX/{{ .Values.mesh }}/g;
    s/revision-XXXX/{{ .Values.revision }}/g;
    s/trustDomain-XXXX/{{ .Values.trustDomain }}/g;
  '
}

#------------------------------------------------------------------------------
# Generate yaml for the given version and component
#------------------------------------------------------------------------------

generate 1-17-3 Base > charts/base/templates/generated.yaml
generate 1-17-3 Cni > charts/cni/templates/generated.yaml
generate 1-17-3 Pilot > charts/pilot/templates/generated.yaml
generate 1-17-3 IngressGateways > charts/igws/templates/generated.yaml
generate 1-17-3 EastWestGateway > charts/ewgw/templates/generated.yaml

#------------------------------------------------------------------------------
# Extract the side-car injector config from the pilot generated yaml
# and save it in a separate file because it contains a template and
# helm gets confused if it is in the same file and it is not escaped.
#------------------------------------------------------------------------------

yq '. |
  select(.kind == "ConfigMap" and .metadata.name == "istio-sidecar-injector-*") |
  .data.config' "charts/pilot/templates/generated.yaml" \
  > "charts/pilot/files/istio-sidecar-injector.raw"
