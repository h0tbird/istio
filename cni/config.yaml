apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-cni
  namespace: istio-system
  labels:
    app: istio-cni
    release: istio
    istio.io/rev: 1-14-1
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: "Cni"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-cni
  labels:
    app: istio-cni
    release: istio
    istio.io/rev: 1-14-1
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: "Cni"
rules:
- apiGroups: [""]
  resources:
  - pods
  - nodes
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-cni-repair-role
  labels:
    app: istio-cni
    release: istio
    istio.io/rev: 1-14-1
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: "Cni"
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "delete", "patch", "update" ]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch", "delete", "patch", "update", "create" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-cni
  labels:
    app: istio-cni
    release: istio
    istio.io/rev: 1-14-1
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: "Cni"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-cni
subjects:
- kind: ServiceAccount
  name: istio-cni
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-cni-repair-rolebinding
  labels:
    k8s-app: istio-cni-repair
    istio.io/rev: 1-14-1
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: "Cni"
subjects:
- kind: ServiceAccount
  name: istio-cni
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-cni-repair-role
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: istio-cni-config
  namespace: istio-system
  labels:
    app: istio-cni
    release: istio
    istio.io/rev: 1-14-1
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: "Cni"
data:
  # The CNI network configuration to add to the plugin chain on each node.  The special
  # values in this config will be automatically populated.
  cni_network_config: |-
        {
          "cniVersion": "0.3.1",
          "name": "istio-cni",
          "type": "istio-cni",
          "log_level": "info",
          "log_uds_address": "__LOG_UDS_ADDRESS__", 
          "kubernetes": {
              "kubeconfig": "__KUBECONFIG_FILEPATH__",
              "cni_bin_dir": "/opt/cni/bin",
              "exclude_namespaces": [ "istio-system", "kube-system" ]
          }
        }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    heaven.githubapp.com/replace-pods-even-if-unchanged: "false"
  labels:
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: 1-14-1
    k8s-app: istio-cni-node
    operator.istio.io/component: Cni
    release: istio
  name: istio-cni-node
  namespace: istio-system
spec:
  selector:
    matchLabels:
      k8s-app: istio-cni-node
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "15014"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        k8s-app: istio-cni-node
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - command:
        - install-cni
        env:
        - name: CNI_NETWORK_CONFIG
          valueFrom:
            configMapKeyRef:
              key: cni_network_config
              name: istio-cni-config
        - name: CNI_NET_DIR
          value: /etc/cni/net.d
        - name: CHAINED_CNI_PLUGIN
          value: "true"
        - name: REPAIR_ENABLED
          value: "true"
        - name: REPAIR_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: REPAIR_LABEL_PODS
          value: "true"
        - name: REPAIR_DELETE_PODS
          value: "true"
        - name: REPAIR_RUN_AS_DAEMON
          value: "true"
        - name: REPAIR_SIDECAR_ANNOTATION
          value: sidecar.istio.io/status
        - name: REPAIR_INIT_CONTAINER_NAME
          value: istio-validation
        - name: REPAIR_BROKEN_POD_LABEL_KEY
          value: cni.istio.io/uninitialized
        - name: REPAIR_BROKEN_POD_LABEL_VALUE
          value: "true"
        image: ghcr.io/resf/istio/install-cni:1.14.1
        imagePullPolicy: IfNotPresent
        name: install-cni
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8000
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-bin-dir
        - mountPath: /host/etc/cni/net.d
          name: cni-net-dir
        - mountPath: /var/run/istio-cni
          name: cni-log-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccountName: istio-cni
      terminationGracePeriodSeconds: 5
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      volumes:
      - hostPath:
          path: /opt/cni/bin
        name: cni-bin-dir
      - hostPath:
          path: /etc/cni/net.d
        name: cni-net-dir
      - hostPath:
          path: /var/run/istio-cni
        name: cni-log-dir
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
---
